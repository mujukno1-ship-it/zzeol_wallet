// handleSearch/handleSearch.js

let lastReqId = 0;
let controller = null;

// 한글 ⇄ 심볼 매핑
const NAME2SYMBOL = {
  '비트코인': 'BTC',
  '이더리움': 'ETH',
  '솔라나': 'SOL',
  '리플': 'XRP',
  '에이다': 'ADA',
  '시바이누': 'SHIB',
};

// 통합 신호 계산 (업비트 + 온체인)
function combineSignals({ upbit, onchain }) {
  const rate = Number(upbit?.changeRate ?? 0);     // 업비트 등락률(소수)
  const mvrv = Number(onchain?.mvrvZ ?? 0);        // 온체인 MVRV Z-Score
  const funding = Number(onchain?.fundingRate ?? 0); // 온체인 펀딩비율

  // 업비트 단독 신호
  const market =
    rate > 0.003 ? 'BUY' :
    rate < -0.003 ? 'SELL' : 'HOLD';

  // 온체인 단독 신호 (예시 기준치)
  const chain =
    (mvrv < 0 && funding < 0) ? 'BUY' :
    (mvrv > 6 || funding > 0.02) ? 'SELL' : 'HOLD';

  // 통합 신호
  const both =
    (market === 'BUY' && chain === 'BUY') ? 'BUY' :
    (market === 'SELL' && chain === 'SELL') ? 'SELL' : 'HOLD';

  const reason = `업비트:${market}, 온체인:${chain}, Δ=${(rate * 100).toFixed(2)}%, MVRV=${mvrv.toFixed(2)}, 펀딩=${(funding * 100).toFixed(2)}%`;
  return { signal: both, reason, market, chain };
}

export async function handleSearch(rawInput) {
  // 심볼 파싱
  const symbol = (NAME2SYMBOL[rawInput.trim()] || rawInput.trim()).toUpperCase();

  // 이전 요청 취소
  if (controller) controller.abort();
  controller = new AbortController();
  const myReqId = ++lastReqId;

  try {
    // 업비트 + 온체인 동시 요청
    const [upbitRes, chainRes] = await Promise.allSettled([
      fetch(`/api/upbit?symbol=${encodeURIComponent(symbol)}`, { signal: controller.signal }).then(r => r.json()),
      fetch(`/api/onchain?symbol=${encodeURIComponent(symbol)}`, { signal: controller.signal }).then(r => r.json())
    ]);

    if (myReqId !== lastReqId) return; // 오래된 응답 무시

    const upbit = upbitRes.status === 'fulfilled' ? upbitRes.value : {};
    const onchain = chainRes.status === 'fulfilled' ? chainRes.value : {};

    // 통합 신호 계산
    const { signal, reason, market, chain } = combineSignals({ upbit, onchain });

    // 화면에 쓸 수 있게 반환(또는 여기서 DOM 업데이트)
    return {
      name: symbol,
      price: upbit?.price ?? '-',
      changeRate: upbit?.changeRate ?? '-',
      mvrv: onchain?.mvrvZ ?? '-',
      funding: onchain?.fundingRate ?? '-',
      signal,      // BUY / SELL / HOLD
      market,      // 업비트 단독 신호
      chain,       // 온체인 단독 신호
      reason       // 설명 문자열
    };
  } catch (e) {
    if (myReqId !== lastReqId) return; // 오래된 응답 무시
    console.error('handleSearch error', e);
    return { name: symbol, signal: 'ERR', reason: '데이터 오류' };
  }
}
